package service;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.2.3
 * Wed May 27 15:29:20 MSK 2020
 * Generated source version: 2.2.3
 * 
 */
 
@WebService(targetNamespace = "http://Service/", name = "SqlServiceWithError")
@XmlSeeAlso({ObjectFactory.class})
public interface SqlServiceWithError {

    @WebMethod(operationName = "SelectData")
    @RequestWrapper(localName = "SelectData", targetNamespace = "http://Service/", className = "service.SelectData")
    @ResponseWrapper(localName = "SelectDataResponse", targetNamespace = "http://Service/", className = "service.SelectDataResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<service.SimpleData> selectData(
        @WebParam(name = "data", targetNamespace = "")
        service.SimpleData data
    ) throws BadFormatException_Exception;

    @WebMethod(operationName = "InsertData")
    @RequestWrapper(localName = "InsertData", targetNamespace = "http://Service/", className = "service.InsertData")
    @ResponseWrapper(localName = "InsertDataResponse", targetNamespace = "http://Service/", className = "service.InsertDataResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.lang.String insertData(
        @WebParam(name = "data", targetNamespace = "")
        service.SimpleData data
    ) throws BadFormatException_Exception;

    @WebMethod(operationName = "DeleteData")
    @RequestWrapper(localName = "DeleteData", targetNamespace = "http://Service/", className = "service.DeleteData")
    @ResponseWrapper(localName = "DeleteDataResponse", targetNamespace = "http://Service/", className = "service.DeleteDataResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.lang.String deleteData(
        @WebParam(name = "idData", targetNamespace = "")
        int idData
    ) throws IdNotFoundException_Exception;

    @WebMethod(operationName = "UpdateData")
    @RequestWrapper(localName = "UpdateData", targetNamespace = "http://Service/", className = "service.UpdateData")
    @ResponseWrapper(localName = "UpdateDataResponse", targetNamespace = "http://Service/", className = "service.UpdateDataResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.lang.String updateData(
        @WebParam(name = "data", targetNamespace = "")
        service.SimpleData data
    ) throws BadFormatException_Exception, IdNotFoundException_Exception;
}
